< C O M A N D O S >

-git clone
    Crea una copia local del repositorio.
    Ej. hit clone <repo_url>

-git status
    Nos devuelve el estado actual del repositorio
    ej. git status

-git add
    Preparar cambios (linea por liena) para ser incluidos en un commit
    ej git add notas.txt(solo un archivo)
    ej git add. (todos los archivos)

-git commit
    Crea un nuevo commit con los cambios que preparamos con git add
    tiene un id de commit y un mensaje.
    ej. git commit -m <mensaje>

-git fetch
    Trae los metadatos sobre commits, ramas, refs, etc de un repositorio remoto.
    No descarga cambios a la rama local, solo trae metadatos
    ej. git fetch

-git pull
    Sincroniza la rama local con lo que hay en la remota.
    En otras palabras, descarga los commits que hay en la remota y faltan en la local
    ej. git pull

-git push
    Sincroniza la rama remota con lo que hay en la local
    En otras palabras, sube los commits que hay en la local y faltan en la remota
    ej. git push


< R A M A S >
Las ramas nos permiten trabajar con el repositorio sin alterar la estabilidad de la rama principal.
Como cualquier otra rama, hay una local y una remota.
Las ramas parten de un commit de origen.


< I N T E GR A C I O N      D E     R A M A S >
Para este fin, se utiliza la operaci贸n "merge".
Un merge combina los commits de una rama hacia otra en un solo commit conocido como un "merge commit".

< RESOLUCION DE CONFLICTOS >
Estrategias:
1. Merge commit (crea un merge commit con cambios aplicados en el orden que el desarrollador elija).
2. Rebase: cambia el punto de origen de una rama, resolviendo conflictos duante la operaci贸n. Requiere un "force push" para sobreesribir
la rama remota.

Pull request:
Solicita la aprobaci贸n de loc ambios en una rama a otro colaborador. Previo a la integraci贸n de las 2 ramas (merge).